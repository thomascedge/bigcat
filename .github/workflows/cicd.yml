name: Deploy to AWS

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout the repo
      - name: Checkout Repo
        uses: actions/checkout@v3

      # 2. Configure AWS credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      # 3. Login to ECR
      - name: Log in to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      # 4. Build and push Docker image to ECR
      - name: Build, tag, and push image
        run: |
          IMAGE_TAG=${{ github.sha }}
          docker buildx build \
            --platform linux/amd64 \
            -t ${{ steps.login-ecr.outputs.registry }}/bigcat:$IMAGE_TAG \
            -t ${{ steps.login-ecr.outputs.registry }}/bigcat:latest \
            --push .
          echo "IMAGE=${{ steps.login-ecr.outputs.registry }}/bigcat:$IMAGE_TAG" >> $GITHUB_ENV

      # 5. Create ECS task definition
      - name: Create ECS task definition
        run: |
          cat <<EOF > ecs-task-def.json
          {
            "family": "bigcat-task",
            "networkMode": "awsvpc",
            "containerDefinitions": [
              {
                "name": "bigcat-app",
                "image": "dummy",
                "essential": true,
                "portMappings": [
                  {
                    "containerPort": 8000,
                    "hostPort": 8000,
                    "protocol": "tcp"
                  }
                ],
                "environment": [
                  {
                    "name": "MONGO_URI",
                    "value": "${{ secrets.MONGO_URI }}"
                  }
                ]
              }
            ],
            "requiresCompatibilities": ["FARGATE"],
            "cpu": "256",
            "memory": "512"
          }
          EOF

      # 6. Render task definition with actual image
      - name: Render ECS task definition
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: ecs-task-def.json
          container-name: bigcat-app
          image: ${{ env.IMAGE }}

      # 7. Deploy to ECS
      - name: Deploy to Amazon ECS
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.task-def.outputs.task-definition }}
          service: bigcat-service-1
          cluster: bigcat-cluster
          wait-for-service-stability: true
